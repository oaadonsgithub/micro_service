---
name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - run: echo ${{ steps.extract_branch.outputs.branch }} ${{ github.repository }}

      - name: Create code ZIP for main
        if: ${{ steps.extract_branch.outputs.branch == 'main' }}
        run: aws deploy push --application-name nodeApp --description "This is a revision for the application MyNodeApplicationDeploy" --ignore-hidden-files --s3-location s3://mynodeapplicationbucket/code.zip --source .
      
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - run: echo ${{ steps.extract_branch.outputs.branch }} ${{ github.repository }}

      - name: Deploy main branch
        if: ${{ steps.extract_branch.outputs.branch == 'main' }}
        run: aws deploy create-deployment --application-name nodeApp --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name nodeApp_group --s3-location bucket=mynodeapplicationbucket,key=code.zip,bundleType=zip


