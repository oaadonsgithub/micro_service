name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6  # specify Terraform version

      # Configure AWS credentials for Terraform and Docker
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Initialize Terraform
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      # Apply Terraform configuration to create ECR repository
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      # Set up Docker Buildx (optional but recommended for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build and push Docker image to ECR
      - name: Build and Push Docker Image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          IMAGE_NAME: ${{ secrets.ECR_REPO_NAME }}
        run: |
          # Get login credentials for AWS ECR and login to Docker
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY

          # Build the Docker image
          IMAGE_URI=$ECR_REGISTRY/$IMAGE_NAME:latest
          docker build -t $IMAGE_URI .

          # Push the Docker image to ECR
          docker push $IMAGE_URI
